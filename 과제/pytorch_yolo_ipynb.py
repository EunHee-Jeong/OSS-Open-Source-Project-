# -*- coding: utf-8 -*-
"""pytorch_yolo.ipynb의 사본

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AYHwcioUdlkrYDWiwNirYU-x83f0TtxW
"""

import numpy as np
import cv2, torch # cv2 -> 이미지 로드할 수 있게 해줌
from google.colab.patches import cv2_imshow

# Check whether GPU is available or not
print(torch.cuda.is_available())
!nvidia-smi # 세션(원격 컴퓨터)이 현재 사용하고 있는 GPU 확인

# Load the YOLOv5 model from the Pytorch Hub (https://pytorch.org/hub/)
yolov5 = torch.hub.load('ultralytics/yolov5', 'yolov5l', pretrained=True) # pretrained=True -> 트레이닝 받은 결과를 그대로 이용

# Download an image from internet
!wget -c 'https://www.artinsight.co.kr/data/tmp/2008/20200806220234_smacqowr.jpeg' -O 'unnatural.jpg'

# Load an image on internet
image = cv2.imread('unnatural.jpg')
cv2_imshow(image)

# MARK: - YOLO 적용하는 부분.

# Detect objects on the image using the YOLO
results = yolov5(image)
objects = results.xyxyn[0].detach().cpu().numpy() # 한 개의 영상만(.xyxyn[0]), array 형태로 가져옴 (.numpy())

# Rescale object locations
h, w, _ = image.shape
objects[:,0:4] = objects[:,0:4] * [w, h, w, h] # 실제 이미지 크기에 맞는 x, y 값 얻음

# Show the image with results
classes = [ 'person', 'bicycle', 'car', 'motorcycle', 'airplane', 'bus', 'train', 'truck', 'boat', 'traffic light',
            'fire hydrant', 'stop sign', 'parking meter', 'bench', 'bird', 'cat', 'dog', 'horse', 'sheep', 'cow',
            'elephant', 'bear', 'zebra', 'giraffe', 'backpack', 'umbrella', 'handbag', 'tie', 'suitcase', 'frisbee',
            'skis', 'snowboard', 'sports ball', 'kite', 'baseball bat', 'baseball glove', 'skateboard', 'surfboard', 'tennis racket', 'bottle',
            'wine glass', 'cup', 'fork', 'knife', 'spoon', 'bowl', 'banana', 'apple', 'sandwich', 'orange',
            'broccoli', 'carrot', 'hot dog', 'pizza', 'donut', 'cake', 'chair', 'couch', 'potted plant', 'bed',
            'dining table', 'toilet', 'tv', 'laptop', 'mouse', 'remote', 'keyboard', 'cell phone',
            'microwave', 'oven', 'toaster', 'sink', 'refrigerator', 'book', 'clock', 'vase', 'scissors', 'teddy bear', 'hair drier', 'toothbrush' ]
for obj in objects:
  # 이미지 그리는 부분
    if obj[-2] > 0.5: # More than 0.5 confidence
        tl, br = obj[0:2].astype('int'), obj[2:4].astype('int')
        cv2.rectangle(image, tuple(tl), tuple(br), (0, 0, 255), 2)
        cv2.putText(image, f'{classes[int(obj[-1])]}: {obj[-2]:.2f}', tuple(tl + (-2, -4)), cv2.FONT_HERSHEY_DUPLEX, 0.4, (0, 0, 255))
cv2_imshow(image)